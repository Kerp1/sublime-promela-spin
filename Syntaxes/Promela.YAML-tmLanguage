# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Promela
scopeName: source.promela
fileTypes: [pml, promela]
uuid: fa220c5d-0ad5-4a52-8027-37e13443b1fc

patterns:


# Comments
- comment: Block comment
  name: comment.block
  begin: '\/\*'
  end: '\*\/'


# Flow Control
- comment: flow control
  name: keyword.control
  match: '\b(assert|else|fi|if|unless|xr|xs|do|od|break|skip|atomic)\b'


# Operators
- comment: operators
  name: keyword.operator
  match: '\b(run)\b'

- comment: defines
  #name: keyword.operator
  match: '^(#)\s*(define)\s*([a-zA-Z_]+[0-9a-zA-Z_]*)'
  captures:
    #'1': {name: } C doesn't style the octothorp, so I won't.
    '2': {name: keyword.operator}
    '3': {name: entity.name.function}

- comment: label (as in goto)
  name: variable.other
  match: '\b[a-zA-Z_]+[0-9a-zA-Z_]*(\s)*:'


# Functions
- comment: built-in functions
  name: entity.name.function
  match: '\b(printf|len|empty|nempty|full|nfull|enabled|eval|pc_value)\b'

- comment: function calls
  begin: '\b([a-zA-Z_]+[0-9a-zA-Z_]*)\('
  beginCaptures:
    '1': {name: entity.name.function}
  end: '\)'
  patterns:
  - include: $self

- comment: ltls
  begin: '\b(ltl)(\s)+([a-zA-Z_]+[0-9a-zA-Z_]*)(\s)*{'
  beginCaptures:
    '1': {name: storage.type}
    '3': {name: entity.name.function}
  end: '}'
  patterns:
  - include: $self


# Constants
- comment: string
  name: string.quoted.double
  match: '"([^\\"]|\\.)*"'

- comment: integer
  name: constant.numeric
  match: '\b([0-9])+\b'

- comment: true and false
  name: constant.language
  match: '\b(true|false|TRUE|FALSE)\b'

# Types
- comment: type
  name: storage.type
  match: '\b(bit|bool|byte|pid|chan|int|mtype|proctype|short|unsigned|Dproctype)\b'

- comment: modifiers
  name: storage.modifier
  match: '\b(hidden|init|inline|active|local|show)\b'




- comment: I don't know where to put these
  name: storage.modifier
  match: '\b(typedef|c_state)\b'


# Strangely, this is not part of the spec for promela, but it is in C.
- comment: Line comment
  name: comment.double-slash
  match: '\/\/.*$'

...
